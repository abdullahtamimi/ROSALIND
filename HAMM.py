
def HAMM(s,t):
        '''takes two sequence inputs
        parses through sequences, and counts number of
        point mutations between the two.
        outputs hamming distance (number of point mutations)'''
        hamDist=0
        for nucA,nucB in zip(s,t):
                if nucA != nucB:
                        hamDist+=1
        print(hamDist)

def HAMMFile(f):
        '''takes a file input, given it has two lines of sequences
        parses through sequences, and counts number of point mutations
        between the two.
        outputs hamming distance'''
        hamDist=0
        firstPass=False
        for eachLine in f:
                if firstPass:
                        
                        for nucA,nucB in zip(s,eachLine):
                                if nucA != nucB:
                                        hamDist+=1
                s=eachLine
                firstPass=True
                
        print(hamDist)
                                
                              


s='TTCCCGTCCTGCCAATGTCAAAACATGGACTAGTGGTACGGCTTTCCGAAGTCCTTCATGTATTCCGGATAGAGTAATCGCATTCTGACGTCTGACATAGTGTATCAAGAGATTCGCTGCGCCAGTCGAAATATGACGAAGCAGAAGGTCAATGCAGGTCGTAACAGGCTACGAATATGTGGAAAACAGCTGCGGGACGGGATTTTAACTACAATAAAAAGCAAATGTTGTCAATGCGCCCGAGCGTATCCAGGCGTTCAAGAGGCGTCTCCCTAGTACGATTGTTAGGCAGCAAGTTTCATTTGGCTCAAATACACGGTGCACCCCATATTTTGCCCTTATAGGCCGCAATGTAGTAGCCAGTCGGCCTACCAGCTGCGTGATTACAAAAAAGCGGGGTCTTGCTGGGGCTTATCGTTTCCATTTGAGGGACTGCCCGCGGGTGCCCATATCCTTCGTGGTTGAACCCTCGCTTGAGGGACCAATCAATGGTATGGACCGTCCAACCTCCCGCTGGCAGGATGAGAGCCTGACACACCACGGTGAGGCATTACTAGATTGACGTCCATATCGGGCCTTACTTGGTCGGGGTATAGTATGCGAGTCGATCATGTCCTGATACCTGAACAGCGGTCGAGCATGACTGTACGGACCATTCGATGGCCAAATAGCAAGATCCTCTTCACGAGACATCACATAGAAATCTATAACGTGTGCCGGTTTGTACATCACATACCGGACGCGTGTACTAACTATGAGCGCAATGCCTGTTCATGGGGCGCGTACATGATCCCGCGGGAGATGTGACGCGCATGTGTGAAATGTCTACCCCGTTGCGCAGGCGCATTACTATTATGCATGGCTTGTATCCAGTCATTAACCGAAGCAGGTGGTGATTTACGTTGTAAGATACGGACCAGAGGACCCATGAACGGCTGAGCGACTACGTTAGCTGAA'
t='GTGCTAGCAGAGGATTCGATAACAGTAGGCTTCTCCTAAGATTCATCGGTCTCCTTCTTGACGTACGTATAGTTCATGTCCAATCTGAGGTGTTATATAATGAGGGAGTAGCTAATCTGGGTACCCCGTGATTTGCAGGATCCGAGGTGCTAGCCCCCGCATAAAATGCTAGTTGTTAAGGAAAAGCGGCTTCGAGGCTTCACCAACACTAGAAAGGAAAGAAACATACGACAATACACTGAACCGCGTCCAGGCGTTCTAGAAGCCTCAACCCAGTACCGCGCTTTGCCACTTATTATTCGATCCCCTAACTACACGCTGGCACCTTTAGGTGGTGCTCAGCTGTAGCACACGGTGTGCCTTTCGGGCTACCAGTAGACTGATCAGCTGTGTGCGGGCTCTTACCGGGCCTGTGTATCTTCAAGTGCTTAACGGCATGCGTGTCGCCAAATGTGTCCTGGCCCATCCCAGAATGTATCGACCAGCATGTCATATCCGAGATAGATACTCCCGGGCTGAGTTTGATTCTCCGTCAGAAGAGGGTGAGACATGAATCGATTCGCATCACCATCGGGCCTCAATTGGTAGCGGCAAACTCTTGGTTTCGAGGACGTCGCCTAAACTGTTTAGGTGTTAAGTATGATTGTAGGGACGGGCCATTAGCAAAAGTGTAAGACTCTCTGCACCCGCGGTGACATGTATGTTAATGGCGTCGGCAGGGGTGGACAACTCATCGCCGAATCGCCCTCATACGGCGAGCGTATTATCTGGTAGTTAAACGCGCTTAGGATCTCACGTGGAATGGCCATAACACCGATGAGAGGTTTCGGTCGTTCCACAGGAGCCGTGAAACGCCTCGTGAGTACTATGGAGCCATGTATCCAAGCCGGTGTGCCTATAAGTGTGGCGAGCTCGCTGATGGACCCCAAGAACGGGTTCTCCACTACACTACCTCAC'
f=open('rosalind_hamm.txt','r')
               
HAMM(s,t)
HAMMFile(f)
